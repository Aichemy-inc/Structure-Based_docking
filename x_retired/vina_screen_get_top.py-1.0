#! /usr/bin/env python

#######################################################################
##
##	Peter M.U. Ung @ MSSM
##	
##	v1.0	- 13.10.30 - modified from original vina script
##
##	Take the .vina_score.txt generated by vina_screen_preprocess.py
##	to rank the molecules.
##	Print out the top-ranking pdbqt filenames and generate a histogram	
##
##	Required:	vina_screen_preprocess.py
##			*.vina_score.txt
##
#######################################################################

import sys
import glob
import re

if len(sys.argv) < 3:
    MSG = '\n  ## Usage: x.py [VINA .pdbqt dir] [top num] ## \n   e.g.: %s */*pdbqt\n'
    sys.exit(MSG % sys.argv[0])


import numpy as np
import matplotlib.pyplot as plt
import matplotlib.patches as patches
import matplotlib.path as path

fig, ax = plt.subplots()
plt.figure(num=1, figsize=(8,6), dpi=150)

def doit(n):
    ## Take in vina score text
    file_names = glob.glob(sys.argv[1]+'.vina_score.txt')
    everything = []
    histo      = []

    for file_name in file_names:
        with open(file_name, 'rh') as f:
            for idx, line in enumerate(f):
                result = float(line.split('::')[1])
                name   = str(line.split('::')[0])
                everything.append([result, name])
                histo.append(result)

    	# Print the file number for every 1000 read
                if idx % 1000 == 0:
                    print idx

    everything.sort(lambda x,y: cmp(x[0], y[0]))
    part = everything[:n]

    ## Plot Histogram of Score distribution
    i = -11.0
    binsA = []
    while i < -2.0:
        binsA.append(i)
        i = i+0.2
    i = -11.0
    binsB = []
    while i < -2.0:
        binsB.append(i)
        i = i+0.1

    ax.hist(histo, binsA, color='w')
    ax.axvline(x=everything[len(part)][0],ymin=0, ymax=1000, color='r', linewidth=2)
    label = 'Top '+str(n)+': '+str(everything[len(part)][0])
    ax.text(everything[len(part)][0]-0.2, len(everything)/20, label, rotation=90, color='b')
    plt.xlabel('Vina Score')
    plt.ylabel('No. of Molecule')
    TITLE = sys.argv[1]+": "+str(len(everything))
    plt.title(TITLE)
#    plt.show()
    plt.savefig(sys.argv[1]+'.vina_histo.png',dpi=150)


    ## Print out the names of top ranking models
    OUT = open(sys.argv[1]+".vina_top"+str(sys.argv[2])+".txt", 'w')
    for num, p in enumerate(part):
        OUT.write(str(num+1)+"    "+p[1]+"   "+str(p[0])+"\n")
    OUT.close()

if __name__ == '__main__':
    doit(int(sys.argv[2]))
